function inject(bot, options) {
    // @ts-ignore - Initializations
    bot.autoEat = {};
    bot.autoEat.disabled = false;
    bot.autoEat.isEating = false;
    bot.autoEat.options = {
        priority: 'saturation',
        startAt: 16,
        eatingTimeout: 3000,
        bannedFood: [
            // puffer fish - only gives negative effects
            'pufferfish',
            // spider eye - gives poison effect
            'spider_eye',
            // poisonous potato - gives poison effect
            'poisonous_potato',
            // rotten flesh - gives hunger effect
            'rotten_flesh',
            // chorus fruit - randomly teleports you
            'chorus_fruit',
            // raw chicken - 30% chance of getting hunger effect
            'chicken',
            // suspicious stew - gives random effects (including hunger)
            'suspicious_stew',
            // golden apple - shouldn't be eaten unless the user wants to
            'golden_apple'
        ],
        ignoreInventoryCheck: false,
        checkOnItemPickup: true,
        offhand: true,
        equipOldItem: true
    };

    function findBestFood(bot) {
        const banned = bot.autoEat.options.bannedFood;
        const food = bot.registry.foodsByName;
        const items = bot.inventory.items();
        const offhandItem = bot.inventory.slots[45];

        const canOffhand = !bot.supportFeature('doesntHaveOffHandSlot');
        const offhand = bot.autoEat.options.offhand && canOffhand;

        if (offhandItem && canOffhand) {
            items.push(offhandItem);
        }

        const bestChoices = items
            .filter((item) => food[item.name] && !banned.includes(item.name))
            .sort((a, b) => food[b.name][bot.autoEat.options.priority] - food[a.name][bot.autoEat.options.priority]);

        if (bestChoices.length === 0) {
            throw new Error('No suitable food found in inventory.');
        }

        return bestChoices[0];
    }

    bot.AutoEat = () => {
        const bestFood = findBestFood(bot)
        bot.equip(bestFood, 'hand', () => { });
        bot.activateItem();
        return true; // Зелье найдено, заканчиваем выполнение функции
    };
}

module.exports = inject;
